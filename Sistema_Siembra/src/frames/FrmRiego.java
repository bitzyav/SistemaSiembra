/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import Controller.BaseController;
import Controller.HectareaController;
import Controller.RiegoController;
import dominio.DetalleRiegos;
import dominio.EstadoProceso;
import dominio.Hectarea;
import dominio.Riego;
import dominio.TipoRiego;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Itzel
 */
public class FrmRiego extends javax.swing.JFrame {

    BaseController control;
    int limiteCaracteresNombre = 200;

    /**
     * Creates new form FrmRiego
     */
    public FrmRiego() {
        initComponents();
        control = new BaseController();
        this.setLocationRelativeTo(null);
        obtenerRiegos();
        obtenerHectareas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        btnCancelar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cboxTipoRiego = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtCapacidadAgua = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHectareas = new javax.swing.JTable();
        btnBuscarHectareas = new javax.swing.JButton();
        txtBuscarHectareas = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHectareasSelec = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        txtNombreEmpleado = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRiegos = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cboxEstado = new javax.swing.JComboBox<>();
        cboxRiegoBuscar = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestionar Control de Riego de Cultivo");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Ebrima", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gestionar Control de Riego de Cultivo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(83, 57, 43)), "Datos del riego", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Ebrima", 1, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(51, 51, 51));

        jLabel2.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("ID Riego");

        txtId.setEditable(false);
        txtId.setBackground(new java.awt.Color(242, 242, 242));
        txtId.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Observaciones");

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        txtObservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtObservacionesKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtObservaciones);

        btnCancelar.setBackground(new java.awt.Color(51, 51, 51));
        btnCancelar.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnRegistrar.setBackground(new java.awt.Color(51, 51, 51));
        btnRegistrar.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Tipo de Riego");

        cboxTipoRiego.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        cboxTipoRiego.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Presiembra", "Primer auxilio", "Segundo auxilio", "Tercer auxilio", "Cuarto auxilio" }));

        jLabel13.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("Capacidad de agua");

        txtCapacidadAgua.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        txtCapacidadAgua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCapacidadAguaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCapacidadAguaKeyTyped(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(83, 57, 43)), "Lista de hect√°reas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Ebrima", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(51, 51, 51));

        jScrollPane3.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N

        tblHectareas.setFont(new java.awt.Font("Ebrima", 0, 12)); // NOI18N
        tblHectareas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Coordenadas", "Bloque", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHectareas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHectareasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblHectareas);

        btnBuscarHectareas.setBackground(new java.awt.Color(51, 51, 51));
        btnBuscarHectareas.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        btnBuscarHectareas.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarHectareas.setText("Buscar");
        btnBuscarHectareas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarHectareasActionPerformed(evt);
            }
        });

        txtBuscarHectareas.setFont(new java.awt.Font("Ebrima", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Bloque");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscarHectareas, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarHectareas)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarHectareas)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtBuscarHectareas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(83, 57, 43)), "Hect√°reas seleccionadas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Ebrima", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(51, 51, 51));

        jScrollPane4.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N

        tblHectareasSelec.setFont(new java.awt.Font("Ebrima", 0, 12)); // NOI18N
        tblHectareasSelec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Coordenadas", "Bloque", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHectareasSelec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHectareasSelecMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblHectareasSelec);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel14.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("Nombre del empleado");

        txtNombreEmpleado.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        txtNombreEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreEmpleadoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRegistrar)
                        .addGap(112, 112, 112)
                        .addComponent(btnCancelar))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtId, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(txtCapacidadAgua))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboxTipoRiego, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)))
                            .addComponent(jLabel14)
                            .addComponent(txtNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboxTipoRiego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCapacidadAgua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegistrar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(83, 57, 43)), "Lista de riegos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Ebrima", 1, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(51, 51, 51));

        jScrollPane1.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N

        tblRiegos.setFont(new java.awt.Font("Ebrima", 0, 12)); // NOI18N
        tblRiegos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Riego", "Tipo Riego", "Capacidad agua", "Fecha y hora", "Observaciones", "Empleado", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRiegos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRiegosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRiegos);

        jLabel10.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Filtrar por Tipo Riego");

        btnBuscar.setBackground(new java.awt.Color(51, 51, 51));
        btnBuscar.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(51, 51, 51));
        btnEliminar.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnAceptar.setBackground(new java.awt.Color(51, 51, 51));
        btnAceptar.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Cambiar Estado");

        cboxEstado.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        cboxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "En espera", "Iniciado", "En proceso", "Finalizado" }));

        cboxRiegoBuscar.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        cboxRiegoBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Presiembra", "Primer auxilio", "Segundo auxilio", "Tercer auxilio", "Cuarto auxilio" }));
        cboxRiegoBuscar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxRiegoBuscarItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(26, 26, 26)
                        .addComponent(cboxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(cboxRiegoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnBuscar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1093, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cboxRiegoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(btnAceptar)
                    .addComponent(btnEliminar))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        if (validarEspaciosEnBlanco()) {
            if (tblHectareasSelec.getRowCount() != 0) {
                if (this.txtId.getText().equals("")) {
                    this.registrarRiego();
                } else {
                    this.actualizarRiego();
                }
                this.obtenerRiegos();
                this.limpiarFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione al menos una hect√°rea.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Revice que alguno de sus campos no este vacio.",
                    "Campo vacio", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void tblHectareasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHectareasMouseClicked
        if (evt.getClickCount() == 2) {
            this.seleccionarHectareas();
        }
    }//GEN-LAST:event_tblHectareasMouseClicked

    private void tblHectareasSelecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHectareasSelecMouseClicked
        if (evt.getClickCount() == 2) {
            this.deseleccionarHectareas();
        }
    }//GEN-LAST:event_tblHectareasSelecMouseClicked

    private void tblRiegosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRiegosMouseClicked
        if (evt.getClickCount() == 2) {
            this.cargarRiego();
        }
    }//GEN-LAST:event_tblRiegosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this, "¬øSeguro que desea eliminarlo?", "Advertencia", JOptionPane.YES_NO_OPTION);
        if (respuesta == 0) {
            this.eliminarRiego();
            this.obtenerRiegos();
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        this.cambiarEstadoRiego();
        this.obtenerRiegos();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        FrmMenu menu = new FrmMenu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnBuscarHectareasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarHectareasActionPerformed
        buscarHectPorBloque();
        txtBuscarHectareas.setText("");
    }//GEN-LAST:event_btnBuscarHectareasActionPerformed

    private void txtCapacidadAguaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCapacidadAguaKeyPressed


    }//GEN-LAST:event_txtCapacidadAguaKeyPressed

    private void txtCapacidadAguaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCapacidadAguaKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != KeyEvent.VK_BACK_SPACE) {
            JOptionPane.showMessageDialog(this, "Solo se permiten n√∫meros en este campo de texto.",
                    "Campo invalido", JOptionPane.INFORMATION_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_txtCapacidadAguaKeyTyped

    private void txtNombreEmpleadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreEmpleadoKeyTyped
        if (!Character.isLetter(evt.getKeyChar()) && evt.getKeyChar() != KeyEvent.VK_BACK_SPACE
                && evt.getKeyChar() != KeyEvent.VK_SPACE
                && evt.getKeyChar() != KeyEvent.VK_COPY
                && evt.getKeyChar() != KeyEvent.VK_ENTER) {

            JOptionPane.showMessageDialog(this, "Solo se permiten letras en este campo de texto.",
                    "Campo invalido", JOptionPane.INFORMATION_MESSAGE);
            evt.consume();
        }
        if (txtNombreEmpleado.getText().length() >= 200) {
            JOptionPane.showMessageDialog(this, "Se ha alcanzado el maximo de caracteres permitidos (200).",
                    "Campo invalido", JOptionPane.INFORMATION_MESSAGE);
            evt.consume();

        }
    }//GEN-LAST:event_txtNombreEmpleadoKeyTyped

    private void txtObservacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtObservacionesKeyTyped
        if (txtObservaciones.getText().length() >= 200) {
            JOptionPane.showMessageDialog(this, "Se ha alcanzado el maximo de caracteres permitidos (200).",
                    "Campo invalido", JOptionPane.INFORMATION_MESSAGE);
            evt.consume();

        }
    }//GEN-LAST:event_txtObservacionesKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarRiegosTipo();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void cboxRiegoBuscarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxRiegoBuscarItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxRiegoBuscarItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRiego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRiego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRiego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRiego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRiego().setVisible(true);
            }
        });
    }

    public boolean campoSinNumeros(String cadena) {
        Pattern pat = Pattern.compile("[0..9]");
        Matcher mat = pat.matcher(cadena);
        if (mat.matches()) {
            return true;
        } else {
            return false;
        }
    }

    /**
     *
     * @return
     */
    public boolean validarEspaciosEnBlanco() {
        if (!txtNombreEmpleado.getText().trim().isEmpty()
                && !txtCapacidadAgua.getText().trim().isEmpty()
                && !txtObservaciones.getText().trim().isEmpty()
                && !cboxTipoRiego.getSelectedItem().equals("Seleccione...")) {
            return true;
        } else {
            return false;
        }
    }

    public void registrarRiego() {
        List<Riego> entidades = new ArrayList<>();
        Riego riego = new Riego();
        Date fecha = new Date();
        riego.setCapacidadAgua(Integer.parseInt(txtCapacidadAgua.getText()));
        riego.setEstado(EstadoProceso.EN_ESPERA);
        riego.setFechaHora(fecha);
        riego.setObservaciones(txtObservaciones.getText());
        riego.setNombreEmpleado(txtNombreEmpleado.getText());
        riego.setTipoRiego(this.setTipoRiego());

        for (int i = 0; i < tblHectareasSelec.getRowCount(); i++) {
            Integer idHectarea = (Integer) tblHectareasSelec.getValueAt(i, 0);
            Hectarea hectarea = this.control.getHectareaRepository().buscarPorID(idHectarea);
            riego.agregarHectarea(new DetalleRiegos(hectarea, riego, fecha, txtNombreEmpleado.getText()));
        }
        entidades.add(riego);

//        DetalleRiegos detalle = new DetalleRiegos();
//        for (int i = 0; i < tblHectareasSelec.getRowCount(); i++) {
//
//            Integer idHectarea = (Integer) tblHectareasSelec.getValueAt(i, 0);
//            detalle.setHectarea(control.getHectareaRepository().buscarPorID(idHectarea));
//            detalle.setFechaHora((Date) riego.getFechaHora());
//            detalle.setNombreEmpleado(riego.getNombreEmpleado());
//            detalle.setRiego(riego);
//            riego.agregarHectarea(detalle);
//
//        }
//        entidades.add(detalle);
        if (control.getRiegoRepository().guardar(entidades)) {
            JOptionPane.showMessageDialog(this, "El riego ha sido registrado.",
                    "Registrado", JOptionPane.INFORMATION_MESSAGE);
        }

    }

    public void actualizarRiego() {
        Riego riego = control.getRiegoRepository().buscarPorID(Integer.parseInt(txtId.getText()));
        riego.setNombreEmpleado(txtNombreEmpleado.getText());
        riego.setCapacidadAgua(Integer.parseInt(txtCapacidadAgua.getText()));
        riego.setObservaciones(txtObservaciones.getText());
        riego.setTipoRiego(this.setTipoRiego());

        if (this.control.getRiegoRepository().actualizar(riego)) {
            JOptionPane.showMessageDialog(this, "Riego actualizado con √©xito.",
                    "Actualizado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Error al actualizar el riego.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void eliminarRiego() {
        int fila = this.tblRiegos.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un riego.",
                    "Precauci√≥n", JOptionPane.WARNING_MESSAGE);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) this.tblRiegos.getModel();
            Integer idRiego = (Integer) modelo.getValueAt(fila, 0);
            boolean eliminado = this.control.getRiegoRepository().eliminar(idRiego);
            if (eliminado == true) {
                JOptionPane.showMessageDialog(this, "Riego eliminado correctamente.",
                        "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar el riego.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void cambiarEstadoRiego() {
        int fila = this.tblRiegos.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un riego.",
                    "Precauci√≥n", JOptionPane.WARNING_MESSAGE);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) this.tblRiegos.getModel();
            Integer idRiego = (Integer) modelo.getValueAt(fila, 0);
            Riego riego = control.getRiegoRepository().buscarPorID(idRiego);
            riego.setEstado(this.setEstadoProceso());
            if (control.getRiegoRepository().actualizar(riego)) {
                JOptionPane.showMessageDialog(this, "Estado actualizado correctamente.",
                        "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo actualizar el estado.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void seleccionarHectareas() {
        int fila = this.tblHectareas.getSelectedRow();
        DefaultTableModel modeloHectareas = (DefaultTableModel) this.tblHectareas.getModel();
        Integer idHectarea = (Integer) modeloHectareas.getValueAt(fila, 0);
        Hectarea hectarea = control.getHectareaRepository().buscarPorID(idHectarea);

        boolean agregado = false;
        for (int i = 0; i < tblHectareasSelec.getRowCount(); i++) {
            if (tblHectareasSelec.getValueAt(i, 0) == idHectarea) {
                agregado = true;
            }
        }
        if (agregado == false) {
            DefaultTableModel modeloSeleccionados = (DefaultTableModel) tblHectareasSelec.getModel();
            modeloSeleccionados.addRow(hectarea.toArrayFrmRiego());

        } else {
            JOptionPane.showMessageDialog(this, "Ya has seleccionado esa hect√°rea.",
                    "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }

    public void deseleccionarHectareas() {
        int fila = this.tblHectareasSelec.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) this.tblHectareasSelec.getModel();
        modelo.removeRow(fila);
    }

    public void obtenerRiegos() {
        List<Riego> riegos = control.getRiegoRepository().buscarTodos();
        if (riegos != null) {
            DefaultTableModel modelo = (DefaultTableModel) tblRiegos.getModel();
            modelo.setRowCount(0);
            for (Riego riego : riegos) {
                modelo.addRow(riego.toArray());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Sin resultados.",
                    "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void obtenerHectareas() {
        List<Hectarea> hectareas = control.getHectareaRepository().buscarTodos();
        if (hectareas != null) {
            DefaultTableModel modelo = (DefaultTableModel) tblHectareas.getModel();
            modelo.setRowCount(0);
            for (Hectarea hectarea : hectareas) {
                modelo.addRow(hectarea.toArrayFrmRiego());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Sin resultados.",
                    "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    public void buscarRiegosTipo(){
        List<Riego> riegos = control.getRiegoRepository().buscarTodos();
        List<Riego> riegosEncontrados = new ArrayList<>();
        String tipoRiego = null;
        // Convierte el itemSeleccionado al nombre del Enum 
        switch (cboxRiegoBuscar.getSelectedItem().toString()) {
            case "Presiembra":
                tipoRiego = TipoRiego.PRE_SIEMBRA.name();
                break;
            case "Primer auxilio":
                tipoRiego = TipoRiego.PRIMER_AUXILIO.name();
                break;
            case "Segundo auxilio":
                tipoRiego = TipoRiego.SEGUNDO_AUXILIO.name();
                break;
            case "Tercer auxilio":
                tipoRiego = TipoRiego.TERCER_AUXILIO.name();
                break;
            case "Cuarto auxilio":
                tipoRiego = TipoRiego.CUARTO_AUXILIO.name();
                break;
            default:
                 JOptionPane.showMessageDialog(this, "No ha seleccionado un tipo de riego",
                    "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                 return;
        }
        for (int i = 0; i < riegos.size(); i++) {
            if (riegos.get(i).getTipoRiego().name().equalsIgnoreCase(tipoRiego)) {
                riegosEncontrados.add(riegos.get(i));
            }
        }
        if (riegosEncontrados != null) {
            DefaultTableModel modelo = (DefaultTableModel) tblRiegos.getModel();
            modelo.setRowCount(0);
            for (Riego riego : riegosEncontrados) {
                modelo.addRow(riego.toArray());
            }
        } else {
            DefaultTableModel modelo = (DefaultTableModel) tblRiegos.getModel();
            modelo.setRowCount(0);
            JOptionPane.showMessageDialog(this, "Sin resultados.",
                    "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    public void buscarHectPorBloque(){
        List<Hectarea> hectareas = control.getHectareaRepository().buscarTodos();
        List<Hectarea> hectareasEncontradas = new ArrayList();
        for (Hectarea h : hectareas) {
            if(h.getBloque().equalsIgnoreCase(txtBuscarHectareas.getText())){
                hectareasEncontradas.add(h);
            }
        }
        if (hectareasEncontradas != null) {
            DefaultTableModel modelo = (DefaultTableModel) tblHectareas.getModel();
            modelo.setRowCount(0);
            for (Hectarea hectarea : hectareasEncontradas) {
                modelo.addRow(hectarea.toArrayFrmRiego());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Sin resultados.",
                    "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public TipoRiego setTipoRiego() {
        if (cboxTipoRiego.getSelectedItem().toString().equals("Presiembra")) {
            return TipoRiego.PRE_SIEMBRA;
        }
        if (cboxTipoRiego.getSelectedItem().toString().equals("Primer auxilio")) {
            return TipoRiego.PRIMER_AUXILIO;
        }
        if (cboxTipoRiego.getSelectedItem().toString().equals("Segundo auxilio")) {
            return TipoRiego.SEGUNDO_AUXILIO;
        }
        if (cboxTipoRiego.getSelectedItem().toString().equals("Tercer auxilio")) {
            return TipoRiego.TERCER_AUXILIO;
        }
        if (cboxTipoRiego.getSelectedItem().toString().equals("Cuarto auxilio")) {
            return TipoRiego.CUARTO_AUXILIO;
        }
        return null;
    }

    public EstadoProceso setEstadoProceso() {
        if (cboxEstado.getSelectedItem().toString().equals("En espera")) {
            return EstadoProceso.EN_ESPERA;
        }
        if (cboxEstado.getSelectedItem().toString().equals("Iniciado")) {
            return EstadoProceso.INICIADO;
        }
        if (cboxEstado.getSelectedItem().toString().equals("En proceso")) {
            return EstadoProceso.EN_PROCESO;
        }
        if (cboxEstado.getSelectedItem().toString().equals("Finalizado")) {
            return EstadoProceso.FINALIZADO;
        }
        return null;
    }

    public void cargarRiego() {
        int fila = this.tblRiegos.getSelectedRow();

            DefaultTableModel modelo = (DefaultTableModel) this.tblRiegos.getModel();
            Integer idRiego = (Integer) modelo.getValueAt(fila, 0);
            Riego riego = control.getRiegoRepository().buscarPorID(idRiego);
            if (riego != null) {
                txtId.setText((riego.getId().toString()));
                txtCapacidadAgua.setText(String.valueOf(riego.getCapacidadAgua()));
                txtNombreEmpleado.setText(riego.getNombreEmpleado());
                txtObservaciones.setText(riego.getObservaciones());
                if (riego.getTipoRiego().equals(TipoRiego.PRE_SIEMBRA)) {
                    cboxTipoRiego.setSelectedIndex(1);
                }
                if (riego.getTipoRiego().equals(TipoRiego.PRIMER_AUXILIO)) {
                    cboxTipoRiego.setSelectedIndex(2);
                }
                if (riego.getTipoRiego().equals(TipoRiego.SEGUNDO_AUXILIO)) {
                    cboxTipoRiego.setSelectedIndex(3);
                }
                if (riego.getTipoRiego().equals(TipoRiego.TERCER_AUXILIO)) {
                    cboxTipoRiego.setSelectedIndex(4);
                }
                if (riego.getTipoRiego().equals(TipoRiego.CUARTO_AUXILIO)) {
                    cboxTipoRiego.setSelectedIndex(5);
                }
                //hectareas selec
                List<DetalleRiegos> hectareasSelec = riego.getHectareas();
                if (hectareasSelec != null) {
                    DefaultTableModel modeloSelec = (DefaultTableModel) tblHectareasSelec.getModel();
                    modeloSelec.setRowCount(0);
                    for (DetalleRiegos hectareaSelec : hectareasSelec) {
                        modeloSelec.addRow(hectareaSelec.toArray());
                    }
                }
        }
    }

    public void limpiarFormulario() {
        txtId.setText("");
        txtCapacidadAgua.setText("");
        txtNombreEmpleado.setText("");
        txtObservaciones.setText("");
        cboxTipoRiego.setSelectedIndex(0);
        DefaultTableModel modeloSeleccionados = (DefaultTableModel) tblHectareasSelec.getModel();
        modeloSeleccionados.setRowCount(0);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarHectareas;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cboxEstado;
    private javax.swing.JComboBox<String> cboxRiegoBuscar;
    private javax.swing.JComboBox<String> cboxTipoRiego;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tblHectareas;
    private javax.swing.JTable tblHectareasSelec;
    private javax.swing.JTable tblRiegos;
    private javax.swing.JTextField txtBuscarHectareas;
    private javax.swing.JTextField txtCapacidadAgua;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombreEmpleado;
    private javax.swing.JTextArea txtObservaciones;
    // End of variables declaration//GEN-END:variables
}
